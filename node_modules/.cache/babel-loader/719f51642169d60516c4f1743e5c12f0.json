{"ast":null,"code":"var _jsxFileName = \"/Users/heojaehyeog/whoisolder/src/pages/Play.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Score from \"../components/Score\";\nimport People from \"../components/People\";\nimport dummydata from \"../api/dummydata\";\nimport getPeople from \"../api/randomApi\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst original = dummydata.slice;\n\nfunction Play({\n  header,\n  setHeader,\n  result,\n  setResult,\n  score,\n  setScore\n}) {\n  _s();\n\n  // 데이터 보존 상태\n  const [people, setPeople] = useState([]);\n  const [answer, setAnswer] = useState();\n  let history = useHistory(); //종료 여부 state 생성해서 End 연결\n  // 맞췄을 때\n\n  useEffect(() => {\n    setTimeout(function () {\n      const targets = getPeople(original);\n\n      if (targets[0].birth < targets[1].birth) {\n        setAnswer(targets[0]);\n      } else {\n        setAnswer(targets[1]);\n      }\n\n      setPeople(targets);\n      setHeader(true);\n    }, score === 0 ? 0 : 500);\n  }, [score]); // 틀렸을 때\n\n  useEffect(() => {\n    setTimeout(function () {\n      if (result === false) {\n        setHeader(true);\n        history.push(\"/end\");\n        setResult(true);\n      }\n    }, 3000);\n  }, [result]);\n\n  const handlePeopleClick = data => {\n    header ? setHeader(false) : setHeader(true);\n\n    if (answer === data) {\n      setScore(score + 1);\n    } else setResult(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        header: header,\n        setHeader: setHeader,\n        result: result,\n        setResult: setResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Score, {\n        score: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"people\",\n      children: people.map(data => {\n        return /*#__PURE__*/_jsxDEV(People, {\n          name: data.name,\n          image: data.image,\n          birth: data.birth,\n          header: header,\n          handlePeopleClick: () => {\n            handlePeopleClick(data);\n          }\n        }, data.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Play, \"uIkjaddyehlHMTGOEZ5BtB+RMNs=\", false, function () {\n  return [useHistory];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/heojaehyeog/whoisolder/src/pages/Play.js"],"names":["React","useEffect","useState","Header","Score","People","dummydata","getPeople","useHistory","original","slice","Play","header","setHeader","result","setResult","score","setScore","people","setPeople","answer","setAnswer","history","setTimeout","targets","birth","push","handlePeopleClick","data","map","name","image","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport Score from \"../components/Score\";\nimport People from \"../components/People\";\nimport dummydata from \"../api/dummydata\";\nimport getPeople from \"../api/randomApi\";\nimport { useHistory } from \"react-router-dom\";\n\nconst original = dummydata.slice;\n\nfunction Play({ header, setHeader, result, setResult, score, setScore }) {\n  // 데이터 보존 상태\n  const [people, setPeople] = useState([]);\n  const [answer, setAnswer] = useState();\n\n  let history = useHistory();\n\n  //종료 여부 state 생성해서 End 연결\n\n  // 맞췄을 때\n  useEffect(() => {\n    setTimeout(\n      function () {\n        const targets = getPeople(original);\n        if (targets[0].birth < targets[1].birth) {\n          setAnswer(targets[0]);\n        } else {\n          setAnswer(targets[1]);\n        }\n        setPeople(targets);\n        setHeader(true);\n      },\n      score === 0 ? 0 : 500\n    );\n  }, [score]);\n  // 틀렸을 때\n  useEffect(() => {\n    setTimeout(function () {\n      if (result === false) {\n        setHeader(true);\n        history.push(\"/end\");\n        setResult(true);\n      }\n    }, 3000);\n  }, [result]);\n\n  const handlePeopleClick = (data) => {\n    header ? setHeader(false) : setHeader(true);\n    if (answer === data) {\n      setScore(score + 1);\n    } else setResult(false);\n  };\n\n  return (\n    <>\n      <div>\n        <Header\n          header={header}\n          setHeader={setHeader}\n          result={result}\n          setResult={setResult}\n        />\n      </div>\n      <div>\n        <Score score={score} />\n      </div>\n      <div className=\"people\">\n        {/* 여기서 2개 반복문 */}\n        {people.map((data) => {\n          return (\n            <People\n              key={data.id}\n              name={data.name}\n              image={data.image}\n              birth={data.birth}\n              header={header}\n              handlePeopleClick={() => {\n                handlePeopleClick(data);\n              }}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}