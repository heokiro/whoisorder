{"ast":null,"code":"export default function getPeople(arr, min, max) {\n  if (min === undefined) min = 0;\n  if (max === undefined) max = arr.length;\n  let result = [];\n\n  for (let i = 0; i < 2; i++) {\n    const idx = parseInt(Math.random() * (Number(max) - Number(min)));\n\n    if (i > 0 && result[0].birth === arr[idx].birth) {\n      i--;\n    } else {\n      result.push(arr[idx]); // arr.splice(idx, 1);\n\n      max = arr.length;\n    }\n  }\n\n  return result;\n} // 배열에서 엘리먼트 2개 추출하고\n// 2개 추출한 엘리먼트를 기존 배열에서 제외해줘야 한다.","map":{"version":3,"sources":["/Users/heojaehyeog/whoisolder/src/api/randomApi.js"],"names":["getPeople","arr","min","max","undefined","length","result","i","idx","parseInt","Math","random","Number","birth","push"],"mappings":"AAAA,eAAe,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkC;AAC/C,MAAID,GAAG,KAAKE,SAAZ,EAAuBF,GAAG,GAAG,CAAN;AACvB,MAAIC,GAAG,KAAKC,SAAZ,EAAuBD,GAAG,GAAGF,GAAG,CAACI,MAAV;AACvB,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,UAAMC,GAAG,GAAGC,QAAQ,CAACC,IAAI,CAACC,MAAL,MAAiBC,MAAM,CAACT,GAAD,CAAN,GAAcS,MAAM,CAACV,GAAD,CAArC,CAAD,CAApB;;AACA,QAAIK,CAAC,GAAG,CAAJ,IAASD,MAAM,CAAC,CAAD,CAAN,CAAUO,KAAV,KAAoBZ,GAAG,CAACO,GAAD,CAAH,CAASK,KAA1C,EAAiD;AAC/CN,MAAAA,CAAC;AACF,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACQ,IAAP,CAAYb,GAAG,CAACO,GAAD,CAAf,EADK,CAEL;;AACAL,MAAAA,GAAG,GAAGF,GAAG,CAACI,MAAV;AACD;AACF;;AACD,SAAOC,MAAP;AACD,C,CACD;AACA","sourcesContent":["export default function getPeople(arr, min, max) {\n  if (min === undefined) min = 0;\n  if (max === undefined) max = arr.length;\n  let result = [];\n  for (let i = 0; i < 2; i++) {\n    const idx = parseInt(Math.random() * (Number(max) - Number(min)));\n    if (i > 0 && result[0].birth === arr[idx].birth) {\n      i--;\n    } else {\n      result.push(arr[idx]);\n      // arr.splice(idx, 1);\n      max = arr.length;\n    }\n  }\n  return result;\n}\n// 배열에서 엘리먼트 2개 추출하고\n// 2개 추출한 엘리먼트를 기존 배열에서 제외해줘야 한다.\n"]},"metadata":{},"sourceType":"module"}